<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>new</title>
    <url>/2021/08/18/new/</url>
    <content><![CDATA[<p>新的篇章~</p>
]]></content>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>Android开发-Apk安装步骤</title>
    <url>/2021/08/19/Android-apk-install/</url>
    <content><![CDATA[<p>Apk 安装的主要步骤：</p>
<ol>
<li>将 apk 文件复制到 <code>data/app</code> 目录</li>
<li>解析 apk 信息</li>
<li>dexopt 操作</li>
<li>更新权限信息</li>
<li>完成安装，发送 <code>Intent.Action_PACKAGE_ADDED</code> 广播</li>
</ol>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android开发-App启动流程</title>
    <url>/2021/08/19/Android-app-start/</url>
    <content><![CDATA[<p>App的启动流程：</p>
<ol>
<li>点击桌面 App 图标，Launcher 进程采用 Binder IPC 向 system_server 进程发起 startActivity 请求；</li>
<li>system_server 进程接收到请求后，向 zygote 进程发起创建进程的请求；</li>
<li>Zygote 进程 fork 出新的子进程，即 App 进程；</li>
<li>App 进程，通过 Binder IPC 向 system_server 进程发起 attachApplication 请求；</li>
<li>system_server 进程在收到请求后，进行一系列准备工作后，再通过 binder IPC 向 App 进程发送 scheduleLaunchActivity 请求；</li>
<li>App 进程的 binder 线程 (ApplicationThread) 在收到请求后，通过 handler 向主线程发送 LAUNCH_ACTIVITY 消息；</li>
<li>主线程在收到 Message 后，通过发射机制创建目标 Activity，并回调 Activity.onCreate() 等方法；</li>
<li>App 正式启动，开始进入 Activity 生命周期，执行完 onCreate/onStart/onResume 方法，UI 渲染结束后便可以看到 App 的主界面。</li>
</ol>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
</search>
